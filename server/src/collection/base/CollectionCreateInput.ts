/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsJSON,
  IsBoolean,
  ValidateNested,
  IsDate,
  IsEnum,
} from "class-validator";
import { GraphQLJSONObject } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ItemCreateNestedManyWithoutCollectionsInput } from "./ItemCreateNestedManyWithoutCollectionsInput";
import { Type } from "class-transformer";
import { NetworkWhereUniqueInput } from "../../network/base/NetworkWhereUniqueInput";
import { UserCreateNestedManyWithoutCollectionsInput } from "./UserCreateNestedManyWithoutCollectionsInput";
import { EnumCollectionProtocolType } from "./EnumCollectionProtocolType";
@InputType()
class CollectionCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  collectionSymbol?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contractAddress?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  coverImage?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  customAttributes?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  deletedAt?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  displayImage?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  displayName?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isLogical?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => ItemCreateNestedManyWithoutCollectionsInput,
  })
  @ValidateNested()
  @Type(() => ItemCreateNestedManyWithoutCollectionsInput)
  @IsOptional()
  @Field(() => ItemCreateNestedManyWithoutCollectionsInput, {
    nullable: true,
  })
  items?: ItemCreateNestedManyWithoutCollectionsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  listedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => NetworkWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => NetworkWhereUniqueInput)
  @IsOptional()
  @Field(() => NetworkWhereUniqueInput, {
    nullable: true,
  })
  network?: NetworkWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutCollectionsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutCollectionsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutCollectionsInput, {
    nullable: true,
  })
  owner?: UserCreateNestedManyWithoutCollectionsInput;

  @ApiProperty({
    required: false,
    enum: EnumCollectionProtocolType,
  })
  @IsEnum(EnumCollectionProtocolType)
  @IsOptional()
  @Field(() => EnumCollectionProtocolType, {
    nullable: true,
  })
  protocolType?: "Erc721" | "Erc1155" | null;
}
export { CollectionCreateInput };
